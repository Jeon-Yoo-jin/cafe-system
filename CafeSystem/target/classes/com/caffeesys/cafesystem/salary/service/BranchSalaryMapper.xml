<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caffeesys.cafesystem.salary.service.BranchSalaryMapper">
	<resultMap type="com.caffeesys.cafesystem.salary.service.BranchSalaryVO" id="resultBranchSalary">
		<result column="branch_salary_code" property="branchSalaryCode"/>			<!-- 명세서 코드 -->
		<result column="statement_number" property="statementNumber"/>				<!-- 전표번호 -->
		<result column="branch_employee_code" property="branchEmployeeCode"/>		<!-- 직원코드 -->
		<result column="branch_salary_workmonth" property="branchSalaryWorkmonth"/>	<!-- 귀속년월 -->
		<result column="branch_employee_salary" property="branchEmployeeSalary"/>	<!-- 월급 -->
		<result column="branch_salary_health" property="branchSalaryHealth"/>		<!-- 건강보험 -->
		<result column="branch_salary_insurance" property="branchSalaryInsurance"/>	<!-- 고용보험 -->
		<result column="branch_salary_persion" property="branchSalaryPersion"/>		<!-- 국민연금 -->
		<result column="branch_salary_payments" property="branchSalaryPayments"/>	<!-- 지급합계 -->
		<result column="branch_salary_deduction" property="branchSalaryDeduction"/>	<!-- 공제합계 -->
		<result column="branch_salary_receipts" property="branchSalaryReceipts"/>	<!-- 실 수령액 -->
		<result column="branch_salary_paydate" property="branchSalaryPaydate"/>		<!-- 실 지급일자 -->
		<result column="branch_employee_name" property="branchEmployeeName"/>		<!-- 지점직원 이름 -->
		<result column="branch_employee_birth" property="branchEmployeeBirth"/>		<!-- 지점직원 생년월일 -->
		<result column="category_small"	property="categoryPosition"/>				<!-- 부서 -->
	</resultMap>
	<resultMap type="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO" id="resultBranchPersonnel">
		<result column="local_category_code"  property="localCategoryCode"/>	<!-- 지역코드 -->
		<result column="shop_code" property="shopCode"  /><!-- 매장코드 -->
	</resultMap>
	<!-- 검색한 list  -->
	<select id="branchSalaryList" parameterType="java.util.Map" resultMap="resultBranchSalary">
		SELECT bs.branch_salary_workmonth
			, bs.branch_employee_code
			, be.branch_employee_name
			, be.branch_employee_birth
			, cate.category_small
			, bs.branch_salary_payments
			, bs.branch_salary_deduction
			, bs.branch_salary_receipts	
	    FROM branch_salary bs 
	    INNER JOIN branch_employee be
			ON bs.branch_employee_code = be.branch_employee_code
			INNER JOIN category cate
				on be.position_category_code=cate.category_code
		<!-- WHERE절 include 태그로 삽입 -->
	     <include refid="search"></include>  		
		ORDER BY bs.branch_employee_code ASC	
	   	LIMIT ${beginRow}, ${pagePerRow};
	</select>
	
	<!-- 검색한 레코드 개수 -->
	<select id="branchSalaryCount" parameterType="java.util.Map" resultType="Integer">
		SELECT count(*)
	    FROM branch_salary bs 
	    INNER JOIN branch_employee be
			ON bs.branch_employee_code = be.branch_employee_code
			INNER JOIN category cate
				on be.position_category_code=cate.category_code
			<!-- WHERE절 include 태그로 삽입 -->
	    	 <include refid="search"></include>
			ORDER BY bs.branch_salary_workmonth ASC	
	</select>
	
	<sql id="search">
		<choose>
			<!-- 직원코드로 검색할 경우 -->
			<when test='keyword1 != null or keyword1="branch_employee_code"'>
				WHERE bs.branch_employee_code like CONCAT('%',#{keyword1},'%')				
			</when>
			<!-- 데이터타입으로 검색할 경우  -->
			<otherwise>			
				WHERE date_format(bs.branch_salary_workmonth,'%Y-%m-%d') = #{keyword2}
			</otherwise>
		</choose>
	</sql>	
	
	
	<!-- 급여 명세서 등록 할때 우리 매장의 직원들 select -->
	<select id="branchCodeList" parameterType="String" resultType="String">
		SELECT branch_employee_code 
		FROM branch_employee
		WHERE 
			local_category_code = (SELECT local_category_code FROM branch_employee
			WHERE branch_employee_code = #{empCode} and position_category_code ="201")
		and 
			shop_code = (SELECT shop_code FROM branch_employee
			WHERE branch_employee_code = #{empCode} and position_category_code="201")
		and position_category_code != "201"  	
	</select>
	
	<!-- 직원코드의 급여 select -->
	<select id="branchEmployeeSalaryInsert" parameterType="String" resultType="Integer">
		SELECT branch_personnel_salary 
		FROM branch_personnel
		WHERE branch_employee_code = #{branchEmployeeCode}
	</select>
	
	<!-- 계정과목의 branch_salary_code컬럼에서 글자말고, 오른쪽 숫자의 최대값 select -->
	<select id="branchSalaryCodeMax" resultType="Integer">
		select max(CAST(substring(branch_salary_code,13) AS DECIMAL))
		from branch_salary
	</select>
	
	<!-- 계정과목의 branch_salary_code컬럼에서 글자말고,가운데 숫자의 최대값 select -->
	<select id="branchSalaryCodeMidMax" resultType="Integer">
		select  max(CAST(substring(branch_salary_code,9) AS DECIMAL))
		from branch_salary
	</select>
	
	<!-- 전표번호 등록할때 오늘의 날짜 171203이런형식 -->
	<select id="statementDate" resultType="String">
		SELECT DATE_FORMAT(now(),'%y%m%d');		
	</select>
	
	<!--전표전호 등록할때 local,shop코드 selelct  -->
	<select id="bEmployeeLocalShop" parameterType="String" resultMap="resultBranchPersonnel">
		SELECT local_category_code, shop_code FROM branch_employee
			WHERE branch_employee_code = #{branchEmployeeCode}
	</select>
	<!-- 지점직원 급여명세서 등록 -->
	<insert id="branchSalaryInsert">
		INSERT INTO branch_salary(
			branch_salary_code
			,statement_number
			,branch_employee_code
			,branch_salary_workmonth
			,branch_employee_salary
			,branch_salary_health
			,branch_salary_insurance
			,branch_salary_persion
			,branch_salary_payments
			,branch_salary_deduction
			,branch_salary_receipts
			,branch_salary_paydate)
		VALUES(
			#{branchSalaryCode}
			,#{statementNumber}
			,#{branchEmployeeCode}
			,#{branchSalaryWorkmonth}
			,#{branchEmployeeSalary}
			,#{branchSalaryHealth}
			,#{branchSalaryInsurance}
			,#{branchSalaryPersion}
			,#{branchSalaryPayments}
			,#{branchSalaryDeduction}
			,#{branchSalaryReceipts}
			,#{branchSalaryPaydate});	
	</insert>
	
</mapper>