<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caffeesys.cafesystem.claim.service.ClaimMapper">
	<!-- ClaimVo resultmap -->
	<resultMap type="com.caffeesys.cafesystem.claim.service.ClaimVO" id="resultClaim">
		<result property="claimCode" column="claim_code" /> <!-- 클레임 관리코드(PK) -->
		<result property="claimCategoryCode" column="claim_category_code" /> <!-- 카테고리(FK) -->
		<result property="employeeCode" column="employee_code" /> <!-- 직원코드(FK) -->
		<result property="claimTitle" column="claim_title" /> <!-- 제목 -->
		<result property="claimContents" column="claim_contents" /> <!-- 내용 -->
		<result property="claimDate" column="claim_date" /> <!-- 작성일 -->
		<result property="claimFile" column="claim_file" /> <!-- 첨부파일 -->
		<result property="claimReRef" column="claim_re_ref" /> <!-- 답글의 원글 번호 -->
		<result property="claimReLev" column="claim_re_lev" /> <!-- 해당 원글의 몇번째 답글인가 -->
		<result property="claimReSeq" column="claim_re_seq" /> <!-- 답글 정렬을 위한 시퀀스 -->
		<result property="claimCategoryName" column="category_small" /> <!-- 카테고리 이름 저장용 -->
	</resultMap>

	<!-- CategoryVo resultMap -->
	<resultMap type="com.caffeesys.cafesystem.Category" id="resultCategory">
		<result property="categoryCode" column="category_code" /> <!-- 코드(PK) -->
		<result property="categoryLarge" column="category_large" /> <!-- 대분류 -->
		<result property="categoryMiddle" column="category_middle" /> <!-- 중분류 -->
		<result property="categorySmall" column="category_small" /> <!-- 소분류 -->
	</resultMap>

	<!-- 클레임 게시글 총 숫자 불러오기 -->
	<select id="getClaimCount" resultType="Integer">
		SELECT COUNT(*) FROM claim
	</select>
	
	<!-- 클레임 카테고리 불러오기 -->
	<select id="selectCategoryForClaim" resultMap="resultCategory">
		SELECT
			category_code
			, category_large
			, category_middle
			, category_small
		FROM category 
		WHERE category_middle = 'Claim'
	</select>

	<!-- 클레임 게시글 삭제 -->
	<delete id="deleteClaim" parameterType="Integer">
		DELETE
		FROM claim
		WHERE claim_code = #{claimCode}
	</delete>

	<!-- 클레임 게시글 업데이트(수정) -->
	<update id="updateClaim" parameterType="com.caffeesys.cafesystem.claim.service.ClaimVO">
		UPDATE claim
		SET claim_category_code = #{claimCategoryCode}
			, claim_title = #{claimTitle}
			, claim_contents = #{claimContents}
			, claim_file = #{claimFile}
		WHERE claim_code = #{claimCode}
	</update>

	<!-- 클레임 상세보기 페이지 셀렉트 -->
	<select id="selectOneForDetail" parameterType="Integer" resultMap="resultClaim">
		SELECT 
			claim_code
			, claim_category_code
			, employee_code
			, claim_title
			, claim_contents
			, claim_date
			, claim_file
			, claim_re_ref
			, claim_re_lev
			, claim_re_seq
			, category.category_small
		FROM claim
			INNER JOIN category
			ON claim.claim_category_code = category.category_code
		WHERE claim_code = #{claimCode}
	</select>
	
	<!-- 클레임 검색 처리 -->
	<select id="claimSearch" parameterType="java.util.Map" resultMap="resultClaim">
		SELECT
			claim.claim_code
			, category.category_small
			, claim.employee_code
			, claim.claim_title
			, claim.claim_date
		FROM
			claim
			INNER JOIN category
			ON 
			claim.claim_category_code = category.category_code
		WHERE
			#{claimSearchOption} like CONCAT('%',#{claimSearchWord},'%')
	</select>

	<!-- 클레임 리스트 셀렉트 -->
	<select id="getClaimList" parameterType="java.util.Map" resultMap="resultClaim">
		SELECT
			claim.claim_code
			, category.category_small
			, claim.employee_code
			, claim.claim_title
			, claim.claim_date
		FROM
			claim	
			INNER JOIN category
			ON 
			claim.claim_category_code = category.category_code
		ORDER BY claim.claim_re_ref DESC, claim.claim_code ASC
		LIMIT #{beginRow}, #{pagePerRow}
	</select>

	<!-- 클레임 게시글 입력처리 -->
	<insert id="insertClaim" parameterType="com.caffeesys.cafesystem.claim.service.ClaimVO">
		INSERT INTO claim (
			claim_code
			, claim_category_code
			, employee_code
			, claim_title
			, claim_contents
			, claim_date
			, claim_file
			, claim_re_ref
		) VALUES (
			#{claimCode}
			, #{claimCategoryCode}
			, #{employeeCode}
			, #{claimTitle}
			, #{claimContents}
			, now()
			, #{claimFile}
			, #{claimCode}
		)
	</insert>
</mapper>