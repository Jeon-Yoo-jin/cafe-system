<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="0" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/definitions.xml</value>
			</list>
		</property>
	</bean>
	<!-- 파일 업로드를 위한 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

	<!-- tiles를 사용함으로써 이 부분은 필요없어져서 주석처리함 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/" /> <property name="suffix" 
		value=".jsp" /> <property name="order" value="1" /> </bean> -->

	<!-- commons dbcp를 사용하여 커넥션 풀 생성 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/teamproject" />
		<property name="username" value="synths" />
		<property name="password" value="tifkffk" />
	</bean>
	<!-- mybatis 세션생성을 위한 팩토리 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/caffeesys/cafesystem/shop/service/ContractMapper.xml</value>
				<value>classpath:com/caffeesys/cafesystem/employee/service/BranchManagerMapper.xml</value>
				<value>classpath:com/caffeesys/cafesystem/account/service/AccountTitleMapper.xml</value>
				<value>classpath:com/caffeesys/cafesystem/claim/service/ClaimMapper.xml</value>
				<value>classpath:com/caffeesys/cafesystem/claim/service/ClaimReplyMapper.xml</value>
				<value>classpath:com/caffeesys/cafesystem/login/service/LoginMapper.xml</value>			
			</list>
		</property>
	</bean>
	<!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<context:component-scan base-package="com.caffeesys.cafesystem" />
</beans>
