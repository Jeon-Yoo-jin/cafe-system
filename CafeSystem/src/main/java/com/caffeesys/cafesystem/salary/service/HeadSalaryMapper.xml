<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper
  	namespace="com.caffeesys.cafesystem.salary.service.HeadSalaryMapper">
  	<resultMap type="com.caffeesys.cafesystem.salary.service.HeadSalaryVO" id="resultHeadSalary">
  		<result column="head_salary_code" property="headSalaryCode"/>			<!-- 명세서코드 -->
  		<result column="head_employee_code" property="headEmployeeCode"/>		<!-- 직원코드 -->
  		<result column="head_salary_workmonth" property="headSalaryWorkmonth"/>	<!-- 귀속년월 -->
  		<result column="head_employee_salary" property="headEmployeeSalary"/>	<!-- 월급 -->
  		<result column="head_salary_bonus" property="headSalaryBonus"/>			<!-- 상여금 -->
  		<result column="head_salary_health" property="headSalaryHealth"/>		<!-- 건강보험 -->
  		<result column="head_salary_insurance" property="headSalaryInsurance"/>	<!-- 고용보험 -->
  		<result column="head_salary_persion" property="headSalaryPersion"/>		<!-- 국민연금 -->
  		<result column="head_salary_payments" property="headSalaryPayments"/>	<!-- 지급합계 -->
  		<result column="head_salary_deduction" property="headSalaryDeduction"/>	<!-- 공제합계 -->
  		<result column="head_salary_receipts" property="headSalaryReceipts"/>	<!-- 실 수령액 -->
  		<result column="head_salary_paydate" property="headSalaryPaydate"/>		<!-- 실 지급일 -->
  		<result column="head_employee_name" property="headEmployeeName"/>		<!-- 본사직원 이름 -->
		<result column="head_employee_birth" property="headEmployeeBirth"/>		<!-- 본사직원 생년월일 -->
		<result column="category_small"	property="categoryDepartment"/>			<!-- 부서 -->
  	</resultMap>
  	
  	
  	<!-- 계정과목의 head_salary_code컬럼에서 글자말고, 오른쪽 숫자의 최대값 select -->
	<select id="headSalaryCodeMax" resultType="Integer">
		select max(CAST(substring(head_salary_code,13) AS DECIMAL))
		from head_salary
	</select>
	
	<!-- 계정과목의 head_salary_code컬럼에서 글자말고,가운데 숫자의 최대값 select -->
	<select id="headSalaryCodeMidMax" resultType="Integer">
		select  max(CAST(substring(head_salary_code,9) AS DECIMAL))
		from head_salary
	</select>
  	
  	<!-- 직원코드의 보너스코드의 보너스 금액 select -->
  	<select id="headEmployeeBonusSelect" parameterType="String" resultType="String">
  		select category_small
		FROM category
		WHERE 
			category_code= (select bonus_category_code
				FROM head_employee
				WHERE head_employee_code = #{headEmployeeCode})
  	</select>
  	
  	<!-- 직원코드의 급여 select -->
	<select id="headEmployeeSalaryInsert" parameterType="String" resultType="String">
		SELECT head_employee_salary 
		FROM head_employee
		WHERE head_employee_code = #{headEmployeeCode}
	</select>
	
  	<!-- 급여명세서 등록할때 직원들 select -->
  	<select id="headCodeList" resultType="String">
  		SELECT head_employee_code 
		FROM head_employee
  	</select>
  	
  	<!-- 검색한 list -->
  	<select id="headSalaryList" parameterType="java.util.Map" resultMap="resultHeadSalary">
  		SELECT hs.head_salary_workmonth
			, hs.head_employee_code
			, he.head_employee_name
			, he.head_employee_birth
			, cate.category_small
			, hs.head_salary_payments
			, hs.head_salary_deduction
			, hs.head_salary_receipts	
	    FROM head_salary hs 
	    INNER JOIN head_employee he
			ON hs.head_employee_code = he.head_employee_code
			INNER JOIN category cate
				on he.department_category_code=cate.category_code
			<!-- WHERE절 include 태그로 삽입 -->
	    	 <include refid="search"></include>
				ORDER BY hs.head_employee_code ASC	
  	
  	</select>
  	
	<!-- 검색한 레코드 개수 -->
	<select id="headSalaryCount" parameterType="java.util.Map" resultType="Integer">
			SELECT count(*) 
			FROM head_salary hs 
			INNER JOIN head_employee he 
			ON hs.head_employee_code = he.head_employee_code 
				INNER JOIN category cate 
				on he.department_category_code=cate.category_code 
			<!-- WHERE절 include 태그로 삽입 -->
	    	 <include refid="search"></include>
			ORDER BY hs.head_salary_workmonth ASC 			
			
	</select>
	
		<sql id="search">
			<choose>
				<!-- 직원코드로 검색할 경우 -->
				<when test='keyword1 != null or keyword1="head_employee_code"'>
					WHERE hs.head_employee_code like CONCAT('%',#{keyword1},'%') 	
				</when>
				<!-- 데이터타입으로 검색할 경우  -->
				<otherwise>			
						WHERE date_format(hs.head_salary_workmonth,'%Y-%m-%d') = #{keyword2}
				</otherwise>
			</choose>
		</sql>		
		
		<!-- 등록 처리 -->
  	<insert id="headSalaryInsert">
		INSERT INTO head_salary(
			head_salary_code
			,head_employee_code
			,head_salary_workmonth
			,head_employee_salary
			,head_salary_bonus
			,head_salary_health
			,head_salary_insurance
			,head_salary_persion
			,head_salary_payments
			,head_salary_deduction
			,head_salary_receipts
			,head_salary_paydate)
		VALUES(
			#{headSalaryCode}
			,#{headEmployeeCode}
			,#{headSalaryWorkmonth}
			,#{headEmployeeSalary}
			,#{headSalaryBonus}
			,#{headSalaryHealth}
			,#{headSalaryInsurance}
			,#{headSalaryPersion}
			,#{headSalaryPayments}
			,#{headSalaryDeduction}
			,#{headSalaryReceipts}
			,#{headSalaryPaydate})	
  	</insert>
  	
  </mapper>