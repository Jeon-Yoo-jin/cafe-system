<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.caffeesys.cafesystem.employee.service.BranchPersonnelMapper">
	<resultMap type="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO" id="resultBranchPersonnel">
		<result property="branchEmployeeCode" column="branch_employee_code" /><!-- 직원코드 -->
		<result property="localCategoryCode" column="local_category_code" /><!-- 지역코드 -->
		<result property="shopCode" column="shop_code" /><!-- 매장코드 -->
		<result property="positionCategoryCode" column="position_category_code" /><!-- 직급코드 -->
		<result property="branchEmployeeId" column="branch_employee_id" /><!-- 아이디 -->
		<result property="branchEmployeeName" column="branch_employee_name" /><!-- 이름 -->
		<result property="branchEmployeeBirth" column="branch_employee_birth" /><!-- 생년월일 -->
		<result property="branchEmployeePhone" column="branch_employee_phone" /><!-- 연락처 -->
		<result property="branchEmployeeAddress" column="branch_employee_address" /><!-- 주소 -->
		<result property="branchEmployeeCetificate" column="branch_employee_cetificate" /><!-- 보건증 -->
		<result property="branchPersonnelJoin" column="branch_personnel_join" /><!-- 입사일 -->
		<result property="branchPersonnelSalary" column="branch_personnel_salary" /><!-- 월그 -->
		<result property="branchPersonnelBank" column="branch_personnel_bank" /><!-- 월급계좌은행명 -->
		<result property="branchPersonnelBanknum" column="branch_personnel_banknum" /><!-- 월급계좌번화 -->
		<result property="branchPersonnelContract" column="branch_personnel_contract" /><!-- 근로계약서 -->
		<result property="shopName" column="shop_name" /><!-- 점포명 -->
		<result property="categorySmall" column="category_small" /><!-- 지역명 -->
		<result property="categoryCode" column="category_code" /><!-- 카테고리코드 -->
	</resultMap>
	
	<!-- DB shop에서 매장 코드 가져오는 select -->
	<select id="selectBranchEmployeeShopCode" resultMap="resultBranchPersonnel">
		SELECT DISTINCT shop_code
		FROM shop
	</select> 
	<!-- DB 카테고리에서 매장 코드 가져오는 select -->
	<select id="selectBranchEmployeeLocal" resultMap="resultBranchPersonnel">
	SELECT category_code, category_small
	FROM category
	WHERE category_code LIKE '0%'
	</select>
	<!-- 직원,매니져 등록 -->
	<!-- DB(지점인사관리)에 등록 -->
	<insert id="insertBranchEmployee" parameterType="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO">
		INSERT INTO branch_employee(
			branch_employee_code, 
			local_category_code, 
			shop_code, 
			position_category_code, 
			branch_employee_id, 
			branch_employee_name, 
			branch_employee_birth, 
			branch_employee_phone, 
			branch_employee_address, 
			branch_employee_cetificate
		) VALUES (
			#{branchEmployeeCode}, 
			#{localCategoryCode}, 
			#{shopCode}, 
			#{positionCategoryCode}, 
			#{branchEmployeeId}, 
			#{branchEmployeeName}, 
			#{branchEmployeeBirth}, 
			#{branchEmployeePhone}, 
			#{branchEmployeeAddress}, 
			#{branchEmployeeCetificate}
		)	
	</insert>
	
	<!-- DB(지점직원관리)에 등록 -->
	<insert id="insertBranchPersonnel" parameterType="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO">
		INSERT INTO branch_personnel(
			branch_employee_code, 
			branch_personnel_join, 
			branch_personnel_salary, 
			branch_personnel_bank, 
			branch_personnel_banknum, 
			branch_personnel_contract
		) VALUES (
			#{branchEmployeeCode},
			#{branchPersonnelJoin},
			#{branchPersonnelSalary},
			#{branchPersonnelBank},
			#{branchPersonnelBanknum},
			#{branchPersonnelContract}
		)
	</insert>
	
	<!-- DB branch_employee에서 직원코드 숫자 최댓값 구하는 select -->
	<select id="selectBranchImployeeCodeMax" resultType="Integer">
		select max(CAST(substring(branch_employee_code,6) AS DECIMAL))  
		from branch_employee		
	</select>

	
	<!-- 지점 직원 리스트   직원코드, 아이디, 이름, 생년월일, 직급-->
	<select id="selectBranchPersonnelList" resultMap="resultBranchPersonnel">
		SELECT
			branch_employee.branch_employee_code,
			branch_employee.branch_employee_id,
			branch_employee.branch_employee_name,
			branch_employee.branch_employee_birth,
			category.category_small
			
		FROM branch_employee INNER JOIN category
		ON branch_employee.position_category_code = category.category_code
		
		WHERE
 		<if test="input == null">
			branch_employee.position_category_code = '202'
			OR branch_employee.position_category_code = '203'
		</if>
		<if test="input != null">
			<!-- 직급 -->
			<if test="cate =='category_small'">
				category.category_small  like CONCAT('%',#{input},'%')
			</if>
			<!-- 이름, 직원 코드 -->
			<if  test="cate !='category_small'">
				(branch_employee.position_category_code = '202'
				OR branch_employee.position_category_code = '203')
				AND branch_employee.${cate} like CONCAT('%',#{input},'%')
			</if>  
		</if>  
		
		ORDER BY branch_employee.branch_employee_code asc
	</select>
	
	<!-- 지점 직원 상세조회  -->
	<select id="selectBranchPersonnelDetail" resultMap="resultBranchPersonnel">
	SELECT
		branch_employee.branch_employee_code,
		category.category_small,
		branch_employee.branch_employee_id,
		branch_employee.branch_employee_name,
		branch_employee.branch_employee_birth,
		branch_employee.branch_employee_phone,
		branch_employee.branch_employee_address,
		branch_employee.branch_employee_cetificate,
		branch_personnel.branch_personnel_join,
		branch_personnel.branch_personnel_salary,
		branch_personnel.branch_personnel_bank,
		branch_personnel.branch_personnel_banknum,
		branch_personnel.branch_personnel_contract
		
	FROM branch_employee INNER JOIN branch_personnel
	ON branch_employee.branch_employee_code = branch_personnel.branch_employee_code
	INNER JOIN category
	ON branch_employee.position_category_code = category.category_code
	WHERE branch_employee.branch_employee_code = #{branchEmployeeCode}
	</select>
	
	<!-- 지점 직원 총 count -->
	<select id="selectBranchPersonnelCount" resultType="Integer">
		SELECT count(*) FROM branch_personnel
	</select>
	
	<!-- 점주 수정 폼에 입력되어 있는 내용-->
	<select id="selectUpdateBranchPersonnel" resultMap="resultBranchPersonnel">
		SELECT
			branch_employee.branch_employee_code,
			branch_employee.position_category_code,
			category.category_small,
			branch_employee.branch_employee_id,
			branch_employee.branch_employee_name,
			branch_employee.branch_employee_birth,
			branch_employee.branch_employee_phone,
			branch_employee.branch_employee_address,
			branch_employee.branch_employee_cetificate,
			branch_personnel.branch_personnel_salary,
			branch_personnel.branch_personnel_bank,
			branch_personnel.branch_personnel_banknum,
			branch_personnel.branch_personnel_contract
		FROM branch_employee INNER JOIN branch_personnel
		ON branch_employee.branch_employee_code = branch_personnel.branch_employee_code
		INNER JOIN category 
		ON branch_employee.position_category_code = category.category_code
		WHERE branch_employee.branch_employee_code = #{branchEmployeeCode}
	</select>
	
	<!-- 업데이트, 두개의 테이블 지점인사관리, 지점직원관리 -->
	<!-- 업데이트(1) 지점 인사관리 -->
	<update id="updateBranchEmployee" parameterType="com.caffeesys.cafesystem.employee.service.BranchManagerVO">
		UPDATE branch_employee
		SET
			branch_employee_id= #{branchEmployeeId},
			branch_employee_name= #{branchEmployeeName},
			branch_employee_birth= #{branchEmployeeBirth},
			branch_employee_phone= #{branchEmployeePhone},
			branch_employee_address= #{branchEmployeeAddress}
		WHERE 
			branch_employee_code = #{branchEmployeeCode}
	</update>
	<!-- 업데이트(2) 지점직원관리 -->
	<update id="updateBranchPersonnel" parameterType="com.caffeesys.cafesystem.employee.service.BranchManagerVO">
		UPDATE branch_personnel
	SET
		branch_personnel_salary=#{branchPersonnelSalary},
		branch_personnel_bank=#{branchPersonnelBank},
		branch_personnel_banknum=#{branchPersonnelBanknum}
	WHERE 
		branch_employee_code = #{branchEmployeeCode}
	</update>
	
	<!-- 지점직원 삭제 처리/ 지점인사관리, 지점직원관리 -->
	 <!-- DB(지점인사관리)에 삭제 -->
	<delete id="deleteBranchEmployee" parameterType="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO">
		DELETE FROM branch_employee WHERE branch_employee_code = #{branchEmployeeCode}
	</delete>
	<!-- DB(지점직원관리)에 삭제-->
	<delete id="deleteBranchPersonnel" parameterType="com.caffeesys.cafesystem.employee.service.BranchPersonnelVO">
		 DELETE FROM branch_personnel WHERE branch_employee_code = #{branchEmployeeCode}
	</delete>
	
	
	<!-- DB branch_employee에서 지역매장코드 select -->
 	<select id="seleteLocalShopCode" resultMap="resultBranchPersonnel">
 		SELECT local_category_code, shop_code
 		FROM branch_employee
 		WHERE branch_employee_code = #{branchEmployeeCode}
 	</select>
 	
 	
 	<!-- 지점에서 확인하는 직원리스트 -->
 	<select id="selectBranchPersonnelInfoList" resultMap="resultBranchPersonnel">
 	SELECT
 		branch_employee.branch_employee_code,
 		branch_employee.branch_employee_id,
 		branch_employee.branch_employee_name,
 		branch_employee.branch_employee_birth,
 		category.category_small
 		
 	FROM branch_employee INNER JOIN category
 	ON branch_employee.position_category_code = category.category_code
 	WHERE 
 		(branch_employee.position_category_code = '202'
 		OR branch_employee.position_category_code = '203')
 		AND(
 			branch_employee.local_category_code = #{localCategoryCode}
 			and branch_employee.shop_code = #{shopCode}
 		)
 	ORDER BY branch_employee.branch_employee_code asc
 	
 	
 	</select>
</mapper>