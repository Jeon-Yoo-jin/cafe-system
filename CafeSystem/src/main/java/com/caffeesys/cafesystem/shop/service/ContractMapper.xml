<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caffeesys.cafesystem.shop.service.ContractMapper">
	<resultMap type="com.caffeesys.cafesystem.shop.service.ContractVo" id="resultContract">
		<result property="contractCode" column="contract_code" /> <!-- 계약코드(PK) -->
		<result property="contractOwnerName" column="contract_owner_name" /> <!-- 소유자명 -->
		<result property="contractShopName" column="contract_shop_name" /> <!-- 점포명 -->
		<result property="contractOwnerPhone" column="contract_owner_phone" /> <!-- 소유자연락처 -->
		<result property="contractStartDate" column="contract_start_date" /> <!-- 계약일 -->
		<result property="contractEndDate" column="contract_end_date" /> <!-- 계약만료일 -->
		<result property="contractPhoto" column="contract_photo" /> <!-- 계약서사진 -->
	</resultMap>
	<!-- 계약서리스트 및 조회 상세전 -->
	<select id="selectContractList" parameterType="java.util.Map" resultMap="resultContract">
        SELECT contract_code, contract_owner_name, contract_shop_name, contract_start_date, contract_end_date
        FROM contract
        <include refid="search"></include>
        ORDER BY contract_code DESC
        LIMIT ${beginRow}, ${pagePerRow}
    </select>
    <!-- 계약서리스트 및 조회 상세전 행의수 -->
    <select id="selectContractCount" parameterType="java.util.Map" resultType="Integer">
        SELECT COUNT(*) FROM contract
        <include refid="search"></include>
    </select>
    <!-- 계약서리스트 및 조회 상세전 sql조각 -->
    <sql id="search">
		<choose>
			<!-- 검색 옵션이 전체 검색일 경우 -->
			<when test = "searchOption.equals('all')">
				WHERE contract_owner_name like CONCAT('%',#{keyword},'%')
	      		OR contract_shop_name like CONCAT('%',#{keyword},'%')    
			</when>
			<!-- 전체검색이 아닐경우  -->
			<otherwise>
				WHERE ${searchOption} like CONCAT('%',#{keyword},'%')
			</otherwise>
		</choose>
	</sql>
    <!-- 계약서등록 -->
	<insert id="insertContract" parameterType="com.caffeesys.cafesystem.shop.service.ContractVo">
		INSERT INTO contract (
			contract_code, contract_owner_name, contract_shop_name, contract_owner_phone
			, contract_start_date, contract_end_date, contract_photo
		) VALUES (
			#{contractCode}, #{contractOwnerName}, #{contractShopName}, #{contractOwnerPhone}
			, #{contractStartDate}, #{contractEndDate}, #{contractPhoto}
		)
	</insert>
	<!-- 계약서등록의 contract_code컬럼에서 글자말고, 숫자의 최대값 증가 select -->
	<select id="selectContractMax" resultType="Integer">
		select max(CAST(substring(contract_code,6) AS DECIMAL)
		)  
		from contract
	</select>
     <!-- 계약서수정 및 계약서상세조회 -->
	<select id="selectContract" parameterType="String" resultMap="resultContract">
        SELECT contract_code, contract_owner_name, contract_shop_name, contract_owner_phone
            	, contract_start_date, contract_end_date, contract_photo
        FROM contract 
        WHERE contract_code = #{contractCode}
    </select>
	<!-- 계약서수정 -->
	<update id="updateContract" parameterType="com.caffeesys.cafesystem.shop.service.ContractVo">
		UPDATE contract
		SET contract_owner_name = #{contractOwnerName}, contract_shop_name = #{contractShopName}
			, contract_owner_phone = #{contractOwnerPhone}, contract_start_date = #{contractStartDate}
			, contract_end_date = #{contractEndDate}, contract_photo = #{contractPhoto}
		WHERE contract_code = #{contractCode}
	</update>
    <!-- 계약서삭제 소유자명확인하고 삭제 -->
    <delete id="deleteContract" parameterType="com.caffeesys.cafesystem.shop.service.ContractVo">
		DELETE FROM contract 
		WHERE contract_code = #{contractCode}
		AND contract_owner_name = #{contractOwnerName}
    </delete>
</mapper>
